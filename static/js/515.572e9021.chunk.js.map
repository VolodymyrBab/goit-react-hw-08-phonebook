{"version":3,"file":"static/js/515.572e9021.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.jsx","components/ContactsList/ContactsList.styled.jsx","redux/contacts/selectors.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/SortedBtns/SortedBtns.styled.jsx","hooks/useContact.js","components/SortedBtns/SortedBtns.jsx","components/ContactsList/ContactsList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-around;\n  gap: 40px;\n`;\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-top: 0;\n  margin-bottom: 10px;\n`;\nexport const ContactsWrapper = styled.div`\n  width: 400px;\n  margin-bottom: 35px;\n  box-shadow: 1px 7px 14px 0px rgba(0, 0, 0, 0.6);\n  border-radius: 10px;\n  padding: 25px;\n  margin-top: 12px;\n  background-color: white;\n`;\n\nexport const Message = styled.p`\n  font-size: 30px;\n  font-weight: 400;\n  margin:0;\n  text-align:center;\n`;\n","import styled from '@emotion/styled';\n\nexport const LoaderStyled = styled.span`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 0;\n  margin-top: 15px;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 5px groove #73dbeb;\n  padding: 10px 0;\n`;\n\nexport const Btn = styled.button`\n  width: 32px;\n  height: 32px;\n  margin-left: 10px;\n  color: rgb(255, 255, 255);\n  border-radius: 5px;\n  font-family: Lato, sans-serif;\n  font-weight: 500;\n  font-size: 16px;\n  cursor: pointer;\n  transition: all 0.3s ease 0s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  position: relative;\n  background: ${proprs => (proprs.delete ? '#e55146' : '#009688')};\n  border: none;\n  z-index: 1;\n  box-shadow: rgba(255, 255, 255, 0.5) 2px 2px 2px 0px inset,\n    rgba(0, 0, 0, 0.1) 7px 7px 20px 0px, rgba(0, 0, 0, 0.1) 4px 4px 5px 0px;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background-color: #54515193;\n    border-radius: 5px;\n    box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n      7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    color: #fff;\n  }\n\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  gap: 10px;\n`;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectSortedAlphabetic = state => state.contacts.sortedAlphabetic;\n\nexport const selectRecentlyAdded = state => state.contacts.recentlyAdded;\n\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n\t(contacts, filterValue) => {\n    const filtredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n    return filtredContacts;\n  }\n);\n\n","import styled from '@emotion/styled';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\n\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(0 0 0 / 10%);\n  z-index: 100;\n`;\n\nexport const ModalWindow = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n\nexport const BtnClose = styled.button`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  display: block;\n  height: 30px;\n  width: 30px;\n  right: 10px;\n  z-index: 1;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n\n`;\n\nexport const Icon = styled(AiOutlineCloseCircle)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  transition: color 200ms linear;\n  \n  :hover {\n\tcolor: #0fc1dd;\n  }\n\n`;\n\nexport const Form = styled.form`\nposition: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 400px;\n  padding: 25px;\n  padding-bottom: 25px;\n  border-radius: 5px;\n  margin-bottom: 35px;\n  box-shadow: 1px 7px 14px 0px rgba(0, 0, 0, 0.6);\n  border-radius: 10px;\n  background-color: white;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  padding: 5px;\n\n  border: 0;\n  border-bottom: 2px solid gray;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  padding: 7px 0;\n  background: transparent;\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 8px;\n  cursor: pointer;\n  margin-top: 15px;\n  color: rgb(255, 255, 255);\n  border-radius: 5px;\n  font-family: Lato, sans-serif;\n  font-weight: 500;\n  font-size: 16px;\n  transition: all 0.3s ease 0s;\n  box-shadow: rgba(255, 255, 255, 0.5) 2px 2px 2px 0px inset,\n    rgba(0, 0, 0, 0.1) 7px 7px 20px 0px, rgba(0, 0, 0, 0.1) 4px 4px 5px 0px;\n  outline: none;\n  position: relative;\n  background: #0fc1dd;\n  border: none;\n  z-index: 1;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background-color: #2ba2cd;\n    border-radius: 5px;\n    box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n      7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    color: #fff;\n  }\n\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n  > span {\n    margin-right: 10px;\n    font-size: 18px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { editContact } from '../../redux/contacts/operation';\nimport { RiContactsLine } from 'react-icons/ri';\nimport { selectIsLoading } from '../../redux/contacts/selectors';\nimport  Loader  from '../Loader/Loader';\nimport {\n  BtnClose,\n  ModalWindow,\n  Overlay,\n  Form,\n  Input,\n  AddButton,\n  Icon,\n} from './Modal.styled';\n\nconst Modal = ({ contactInfo, toggleOpen }) => {\n  const { name, number, id } = contactInfo;\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = e.target;\n    const contact = { name: name.value, number: number.value, id };\n\t  dispatch(editContact(contact));\n\t  toggleOpen();\n  };\n\n  return (\n    <Overlay>\n      <ModalWindow>\n        <Form onSubmit={handleSubmit}>\n          <BtnClose onClick={toggleOpen}>\n            <Icon size=\"30\" />\n          </BtnClose>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Name\"\n            defaultValue={name}\n          />\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Number\"\n            defaultValue={number}\n          />\n          <AddButton type=\"submit\">\n            <span>Edit contacts </span>{' '}\n            {isLoading ? <Loader /> : <RiContactsLine size=\"20\" />}\n          </AddButton>\n        </Form>\n      </ModalWindow>\n    </Overlay>\n  );\n};\n\nexport default Modal;\n","import styled from '@emotion/styled';\n\nexport const SortBtn = styled.button`\n  min-width: 180px;\n  height: 30px;\n  margin: ;\n  color: rgb(255, 255, 255);\n  border-radius: 5px;\n  font-family: Lato, sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  cursor: pointer;\n  transition: all 0.3s ease 0s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  position: relative;\n  background: #0fc1dd;\n  border: none;\n  z-index: 1;\n  box-shadow: rgba(255, 255, 255, 0.5) 2px 2px 2px 0px inset,\n    rgba(0, 0, 0, 0.1) 3px 4px 20px 0px, rgba(0, 0, 0, 0.1) 1px 5px 4px 0px;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background-color: #2ba2cd;\n    border-radius: 5px;\n    box-shadow: rgba(255, 255, 255, 0.5) 2px 2px 2px 0px inset,\n      rgba(0, 0, 0, 0.1) 3px 4px 20px 0px, rgba(0, 0, 0, 0.1) 1px 5px 4px 0px;\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    color: #fff;\n  }\n\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  gap: 10px;\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n  selectRecentlyAdded,\n  selectSortedAlphabetic,\n  selectVisibleContacts,\n} from '../redux/contacts/selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const sortedAlphabetic = useSelector(selectSortedAlphabetic);\n  const recentlyAdded = useSelector(selectRecentlyAdded);\n\n  return {\n    contacts,\n    visibleContacts,\n    error,\n    isLoading,\n    sortedAlphabetic,\n    recentlyAdded,\n  };\n};\n","import { useDispatch } from 'react-redux';\nimport { sortByAdded, sortByName } from '../../redux/contacts/contactSlice';\nimport { SortBtn, BtnWrapper } from './SortedBtns.styled';\nimport { useContacts } from '../../hooks/useContact';\nimport {\nTbSortAscendingLetters,\n  TbSortDescendingLetters,\n  TbSortAscending2,\n  TbSortDescending2,\n} from 'react-icons/tb';\n\nconst SortedBtns = () => {\n\tconst dispatch = useDispatch();\n  const {sortedAlphabetic} = useContacts();\n  const {recentlyAdded }= useContacts();\n  return (\n    <BtnWrapper>\n      <SortBtn onClick={() => dispatch(sortByName())}>\n        Sort by name\n        {sortedAlphabetic ? (\n          <TbSortDescendingLetters size=\"20\" />\n        ) : (\n          <TbSortAscendingLetters size=\"20\" />\n        )}\n      </SortBtn>\n      <SortBtn onClick={() => dispatch(sortByAdded())}>\n        Recently added{' '}\n        {recentlyAdded ? (\n          <TbSortAscending2 size=\"20\" />\n        ) : (\n          <TbSortDescending2 size=\"20\" />\n        )}\n      </SortBtn>\n    </BtnWrapper>\n  );\n};\n\nexport default SortedBtns;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RiDeleteBin2Line, RiEditLine } from 'react-icons/ri';\nimport { deleteContact } from '../../redux/contacts/operation';\nimport {\n  List,\n  ListItem,\n  Btn,\n  BtnWrapper,\n  LoaderStyled,\n} from './ContactsList.styled';\nimport { Confirm } from 'notiflix/build/notiflix-confirm-aio';\nimport Modal from '../Modal/Modal';\nimport SortedBtns from '../SortedBtns/SortedBtns';\nimport Loader from '../Loader/Loader';\nimport { useContacts } from '../../hooks/useContact';\n\n\n\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const { visibleContacts } = useContacts();\n  const { isLoading } = useContacts();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [targetContact, setTargetContact] = useState({});\n\n  const toggleOpen = () => setIsModalOpen(!isModalOpen);\n\n  const handleClick = e => {\n    const id = e.currentTarget.parentNode.parentNode.dataset.id;\n    const targetContact = visibleContacts.find(contact => contact.id === id);\n    setTargetContact(targetContact);\n    toggleOpen();\n  };\n\n\tconst handleDelete = id => {\n    Confirm.show(\n      'Deleting contact',\n      'Do you wanst delete this contact?',\n      'Yes',\n      'No',\n      () => {\n        dispatch(deleteContact(id));\n      },\n    );\n  };\n\n  return (\n    <>\n      <SortedBtns />\n      {isLoading ? (\n        <LoaderStyled>\n          {' '}\n          <Loader color={'#0fc1dd'} size={'50'} />\n        </LoaderStyled>\n      ) : (\n        <List>\n          {visibleContacts.map(({ name, number, id }) => {\n            return (\n              <ListItem data-id={id} key={id}>\n                {name}: {number}\n                <BtnWrapper>\n                  <Btn type=\"button\" onClick={handleClick}>\n                    <RiEditLine size=\"20\" />\n                  </Btn>\n                  <Btn delete type=\"button\" onClick={ () => handleDelete(id)}>\n                    {isLoading ? (\n                      <Loader color={'#ffffff'} size={'20'} />\n                    ) : (\n                      <RiDeleteBin2Line size=\"20\" />\n                    )}\n                  </Btn>\n                </BtnWrapper>\n                {isModalOpen && (\n                  <Modal toggleOpen={toggleOpen} contactInfo={targetContact} />\n                )}\n              </ListItem>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 400px;\n  padding: 25px;\n  padding-bottom: 25px;\n  border-radius: 5px;\n  margin-bottom: 35px;\n  box-shadow: 1px 7px 14px 0px rgba(0, 0, 0, 0.6);\n  border-radius: 10px;\n  background-color: white;\n`;\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-top: 0;\n  margin-bottom: 10px;\n`;\n\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  padding: 5px;\n\n  border: 0;\n  border-bottom: 2px solid gray;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  padding: 7px 0;\n  background: transparent;\n\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 8px;\n  cursor: pointer;\n  margin-top: 15px;\n  color: rgb(255, 255, 255);\n  border-radius: 5px;\n  font-family: Lato, sans-serif;\n  font-weight: 500;\n  font-size: 16px;\n  transition: all 0.3s ease 0s;\n  box-shadow: rgba(255, 255, 255, 0.5) 2px 2px 2px 0px inset,\n    rgba(0, 0, 0, 0.1) 7px 7px 20px 0px, rgba(0, 0, 0, 0.1) 4px 4px 5px 0px;\n  outline: none;\n  position: relative;\n  background: #0fc1dd;\n  border: none;\n  z-index: 1;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background-color: #2ba2cd;\n    border-radius: 5px;\n    box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n      7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    color: #fff;\n  }\n\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n  > span {\n    margin-right: 10px;\n    font-size: 18px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Input, AddButton, Form, Title } from './ContactForm.styled';\nimport { RiContactsLine } from 'react-icons/ri';\nimport Notiflix from 'notiflix';\nimport  Loader  from '../Loader/Loader';\nimport { addContact } from '../../redux/contacts/operation';\nimport { useContacts } from '../../hooks/useContact';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\tconst { contacts } = useContacts();\n  const {isLoading} = useContacts();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = e.target;\n    const contact = { name: name.value, number: number.value };\n    if (contacts.find(existingContact => existingContact.name === name.value)) {\n      Notiflix.Notify.failure(`${contact.name} is already in your contacts`);\n    } else {\n      dispatch(addContact(contact));\n    }\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <Title>Phonebook</Title>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Name\"\n        />\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Number\"\n        />\n        <AddButton type=\"submit\">\n          <span>Add contacts </span>\n          {isLoading ? (\n            <Loader color={'#ffffff'} size={'20'} />\n          ) : (\n            <RiContactsLine size=\"20\" />\n          )}\n        </AddButton>\n      </Form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 10px;\n  text-align: center;\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n  min-width: 400px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  padding: 15px 25px;\n\n  border: 0;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  background-color: white;\n\n  box-shadow: 1px 7px 14px 0px rgba(0, 0, 0, 0.6);\n  border-radius: 10px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { FilterInput, Label } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n  return (\n    <Label>\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Name\"\n        onChange={handleChange}\n      ></FilterInput>\n    </Label>\n  );\n};\n\nexport default Filter;\n","import { Title, Message, ContactsWrapper, Section } from './Contacts.styled';\nimport { useDispatch} from 'react-redux';\nimport { useEffect } from 'react';\nimport ContactsList from '../../components/ContactsList/ContactsList';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport Filter from '../../components/Filter/Filter';\nimport { fetchContacts } from '../../redux/contacts/operation';\nimport { useContacts } from '../../hooks/useContact';\n\nconst Contacts = () => {\n\tconst dispatch = useDispatch();\n\tconst { contacts } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Section>\n      <div>\n        <ContactForm />\n        <Filter />\n      </div>\n      <div>\n        <Title>Contacts</Title>\n        <ContactsWrapper>\n          {contacts.length > 0 ? (\n            <ContactsList />\n          ) : (\n            <Message>Add your first contact</Message>\n          )}\n        </ContactsWrapper>\n      </div>\n    </Section>\n  );\n};\n\nexport default Contacts;\n"],"names":["Section","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","ContactsWrapper","_templateObject3","Message","_templateObject4","LoaderStyled","List","ListItem","Btn","proprs","delete","BtnWrapper","_templateObject5","selectContacts","state","contacts","selectError","error","selectIsLoading","isLoading","selectSortedAlphabetic","sortedAlphabetic","selectRecentlyAdded","recentlyAdded","selectVisibleContacts","createSelector","filter","filterValue","contact","name","toLowerCase","includes","Overlay","ModalWindow","BtnClose","Icon","AiOutlineCloseCircle","Form","Input","_templateObject6","AddButton","_templateObject7","_ref","contactInfo","toggleOpen","number","id","dispatch","useDispatch","useSelector","_jsx","children","_jsxs","onSubmit","e","preventDefault","_e$target","target","value","editContact","onClick","size","type","pattern","title","required","placeholder","defaultValue","Loader","RiContactsLine","SortBtn","useContacts","visibleContacts","sortByName","TbSortDescendingLetters","TbSortAscendingLetters","sortByAdded","TbSortAscending2","TbSortDescending2","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","_useState3","_useState4","targetContact","setTargetContact","handleClick","currentTarget","parentNode","dataset","find","_Fragment","SortedBtns","color","map","RiEditLine","Confirm","deleteContact","handleDelete","RiDeleteBin2Line","Modal","existingContact","Notiflix","concat","addContact","reset","Label","FilterInput","onChange","setFilter","useEffect","fetchContacts","ContactForm","Filter","length","ContactsList"],"sourceRoot":""}